package com.lonfe.processor;import java.util.Collections;import java.util.HashMap;import java.util.Map;import java.util.Set;public class ServiceExportor {	public static final Map<String, Service> serviceMap = new HashMap<String, Service>();	private static Map<String, ServiceMeta> serviceMetaMap = new HashMap<String, ServiceMeta>();	public static void addToServiceMap(Service service) {		if (!isServiceExists(service.getName())) {			serviceMap.put(service.getName(), service);		}	}	public static boolean isServiceExists(String serviceName) {		return serviceMap.containsKey(serviceName);	}	public static Map<String, Service> getServiceMap() {		return Collections.unmodifiableMap(serviceMap);	}	public static Service getServiceByName(String serviceName) {		return serviceMap.get(serviceName);	}	public static void export() throws Exception {		Map<String, Service> serviceMap = getServiceMap();		Set<String> serviceNames = serviceMap.keySet();		for (String name : serviceNames) {			Service service = serviceMap.get(name);			Class<?> clazz = Class.forName(service.getName());			ServiceMeta serviceMeta = new ServiceMeta(clazz);			serviceMetaMap.put(name, serviceMeta);		}	}	public static ServiceMeta getServiceMeta(String serviceName) {		return serviceMetaMap.get(serviceName);	}}